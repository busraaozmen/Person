// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Person.API.Models;

namespace Person.API.Migrations
{
    [DbContext(typeof(KisiContext))]
    partial class KisiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Person.API.Models.Kisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Kisiler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "AY",
                            Soyad = "YILDIZ"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "GÜNEŞ",
                            Soyad = "MARS"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "VENÜS",
                            Soyad = "URANÜS"
                        });
                });

            modelBuilder.Entity("Person.API.Models.PersonelBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("GirisTarihi")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("KisiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KisiId")
                        .IsUnique();

                    b.ToTable("PersonelBilgileri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GirisTarihi = new DateTime(2020, 8, 4, 1, 41, 14, 868, DateTimeKind.Local).AddTicks(3072),
                            KisiId = 1
                        },
                        new
                        {
                            Id = 2,
                            GirisTarihi = new DateTime(2020, 8, 4, 1, 41, 14, 870, DateTimeKind.Local).AddTicks(7413),
                            KisiId = 2
                        },
                        new
                        {
                            Id = 3,
                            GirisTarihi = new DateTime(2020, 8, 4, 1, 41, 14, 870, DateTimeKind.Local).AddTicks(7510),
                            KisiId = 3
                        });
                });

            modelBuilder.Entity("Person.API.Models.PersonelBilgi", b =>
                {
                    b.HasOne("Person.API.Models.Kisi", "Kisi")
                        .WithOne("PersonelBilgi")
                        .HasForeignKey("Person.API.Models.PersonelBilgi", "KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
